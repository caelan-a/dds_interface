/* (c) Copyright 2003-2019, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)osapi_thread_impl.h    generated by: makeheader    Fri Nov 15 12:21:38 2019
 *
 *		built from:	thread_impl.ifc
 */

#ifndef osapi_thread_impl_h
#define osapi_thread_impl_h


  
#ifdef cplusplus
    extern "C" {
#endif


#define RTIOsapiThread_spin(spinCount)		\
{														\
	RTI_UINT64 spin;									\
	RTI_UINT64 ad, bd, cd;								\
	volatile RTI_UINT64 * a, * b, * c;					\
	a = &ad;											\
	b = &bd;											\
	c = &cd;											\
	for (spin = 0; spin < (spinCount); ++spin) {		\
		*a = 3;											\
		*b = 1;											\
		*c = (*a/(*b))*spin;							\
	}													\
}


#if RTI_OSAPI_SIGNAL_HANDLER_SUPPORTED


/*i \ingroup RTIOsapiThreadClass
  @brief  Set the value of RTIOsapiThread_g_raiseSignalOnHandler
        with raiseSignalOnHandler

        ONLY FOR TESTING.

        If the variable RTIOsapiThread_g_raiseSignalOnHandler is RTI_FALSE:
            - The signal is not raised.

    @param raiseSignalOnHandler \b In. Set the value of
        RTIOsapiThread_g_raiseSignalOnHandler to
        raiseSignalOnHandler
*/
extern RTIOsapiDllExport
void RTIOsapiThread_setRaiseSignalOnHandler(RTIBool raiseSignalOnHandler);



#endif /* RTI_OSAPI_SIGNAL_HANDLER_SUPPORTED */



#ifdef cplusplus
    }	/* extern "C" */
#endif


/* end of $Id$ */
#endif /* osapi_thread_impl_h */
