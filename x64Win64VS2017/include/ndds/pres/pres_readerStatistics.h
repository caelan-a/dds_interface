/* (c) Copyright 2003-2021, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)pres_readerStatistics.h    generated by: makeheader    Fri Apr 23 00:10:23 2021
 *
 *		built from:	readerStatistics.ifc
 */

#ifndef pres_readerStatistics_h
#define pres_readerStatistics_h


#include "osapi/osapi_type.h"
#include "commend/commend_readerStatistics.h"

#ifdef __cplusplus
    extern "C" {
#endif

struct PRESPsDataReaderCacheStatus {
    /* number of samples stored in reader queue */
    RTI_INT64 sampleCount;
    /* peak number of samples stored in reader queue */
    RTI_INT64 sampleCountPeak;
    /* peak number of matched remote writers */
    RTI_INT64 remoteWriterCountPeak;
    /* number of samples dropped from reader-side content filtering */
    RTI_INT64 contentFilterDroppedSampleCount;

    RTI_INT64 timeBasedFilterDroppedSampleCount;

    /*
     * Using SOURCE_TIMESTAMP_DESTINATIONORDER_QOS. Number of samples dropped
     * from reader-side due to time synchronization issues.
     * - oldSourceTimestamp: The number of samples drop by receiving a sample
     * older than the last one.
     * - toleranceSourceTimestamp: The number of samples drop by receiving a
     * sample in the future.
     */
    RTI_INT64 oldSourceTimestampDroppedSampleCount;
    RTI_INT64 toleranceSourceTimestampDroppedSampleCount;

    /* Samples dropped by ownership */
    RTI_INT64 ownershipDroppedSampleCount;

    /*
     * Samples dropped by expiration time of:
     *  - lifespan
     *  - autopurge_nowriter_samples_delay
     *  - autopurge_disposed_samples_delay
     */
    RTI_INT64 expiredDroppedSampleCount;

    /* Samples dropped because they were virtual duplicates */
    RTI_INT64 virtualDuplicateDroppedSampleCount;

    /*
     * Samples dropped by keepLast replacement.
     * Only replaced samples with a NOT_READ SampleState count towards this
     * statistic.
     */
    RTI_INT64 replacedDroppedSampleCount;
    /*
     * Samples dropped because they were marked as removed from a batch that was
     * received by the DataReader.
     */
    RTI_INT64 writerRemovedBatchSampleDroppedSampleCount;
    /*
     * Samples (not read) dropped by removing an instance due to instance
     * replacement policy.
     */
    RTI_INT64 totalSamplesDroppedByInstanceReplacement;

    /* Instance statistics */
    RTI_INT64 aliveInstanceCount;
    RTI_INT64 aliveInstanceCountPeak;
    RTI_INT64 noWritersInstanceCount;
    RTI_INT64 noWritersInstanceCountPeak;
    RTI_INT64 disposedInstanceCount;
    RTI_INT64 disposedInstanceCountPeak;
    RTI_INT64 detachedInstanceCount;
    RTI_INT64 detachedInstanceCountPeak;

    /* Number of received samples compressed by the remote DataWriters. */
    RTI_INT64 compressedSampleCount;
};


#define PRES_PS_DATAREADER_CACHE_STATUS_INITIALIZER { \
    0, /* sampleCount */ \
    0, /* sampleCountPeak */ \
    0, /* remoteWriterCountPeak */ \
    0, /* contentFilterDroppedSampleCount */ \
    0, /* timeBasedFilterDroppedSampleCount */ \
    0, /* oldSourceTimestampDroppedSampleCount */ \
    0, /* toleranceSourceTimestampDroppedSampleCount */ \
    0, /* ownershipDroppedSampleCount */ \
    0, /* expiredDroppedSampleCount */ \
    0, /* virtualDuplicateDroppedSampleCount */ \
    0, /* replacedDroppedSampleCount */ \
    0, /* writerRemovedBatchSampleDroppedSampleCount */ \
    0, /* totalSamplesDroppedByInstanceReplacement */ \
    0, /* aliveInstanceCount */ \
    0, /* aliveInstanceCountPeak */ \
    0, /* noWritersInstanceCount */ \
    0, /* noWritersInstanceCountPeak */ \
    0, /* disposedInstanceCount */ \
    0, /* disposedInstanceCountPeak */ \
    0, /* detachedInstanceCount */ \
    0,  /* detachedInstanceCountPeak */ \
    0  /* compressedSampleCount */ \
}

struct PRESPsReaderLocalReaderStatistics {
    struct COMMENDReaderServiceLocalReaderStatistics commendStats;
    struct PRESPsDataReaderCacheStatus presStats;
};


#define PRES_PS_READER_LOCAL_READER_STATISTICS_INITIALIZER { \
COMMEND_READER_SERVICE_LOCAL_READER_STATISTICS_INITIALIZER, \
PRES_PS_DATAREADER_CACHE_STATUS_INITIALIZER \
}

struct PRESPsReaderMatchedWriterStatistics {
    struct COMMENDReaderServiceMatchedWriterStatistics commendStats;
};


#ifdef __cplusplus
    }	/* extern "C" */
#endif

#endif /* pres_readerStatistics_h */
