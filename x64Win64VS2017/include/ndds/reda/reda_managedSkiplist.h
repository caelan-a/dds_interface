/* (c) Copyright 2003-2021, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)reda_managedSkiplist.h    generated by: makeheader    Fri Apr 23 00:10:56 2021
 *
 *		built from:	managedSkiplist.ifc
 */

#ifndef reda_managedSkiplist_h
#define reda_managedSkiplist_h


#include "osapi/osapi_semaphore.h"
#include "reda/reda_fastBuffer.h"
#include "reda/reda_skiplist.h"

#ifdef __cplusplus
    extern "C" {
#endif


struct REDAManagedSkiplist {
    struct REDAFastBufferPool *userDataPool;
    struct RTIOsapiSemaphore *mutex;
    struct REDASkiplistDescription description;
    struct REDASkiplist list;
};


#define REDAManagedSkiplist_INITIALIZER \
{ \
    NULL, /* userDataPool */ \
    NULL, /* mutex */ \
    REDA_SKIPLIST_DESCRIPTION_INITIALIZER, /* description */ \
    REDA_SKIPLIST_INITIALIZER /* list */ \
}


struct REDAManagedSkiplistProperty {
    struct REDAFastBufferPoolProperty userDataPoolProperty;
    RTIBool multiThreadedAccess;
    int expectedNodeCount;
};


#define REDAManagedSkiplistProperty_INITIALIZER \
{ \
    REDA_FAST_BUFFER_POOL_PROPERTY_DEFAULT, /* userDataPoolProperty */ \
    RTI_FALSE, /* multiThreadedAccess */ \
    100 /* expectedNodeCount */ \
}

extern REDADllVariable
const struct REDAManagedSkiplistProperty REDA_MANAGED_SKIPLIST_PROPERTY_DEFAULT;

extern REDADllExport
void REDAManagedSkiplist_finalize(struct REDAManagedSkiplist *self);

extern REDADllExport
RTIBool REDAManagedSkiplist_initializeWithParams(
        struct REDAManagedSkiplist *self,
        const char *userDataTypeName,
        int userDataSize,
        RTIOsapiAlignment userDataAlignment,
        REDAOrderedDataTypeCompareFunction userDataCompareFnc,
        const struct REDAManagedSkiplistProperty *property);

extern REDADllExport
RTIBool REDAManagedSkiplist_initialize(
        struct REDAManagedSkiplist *self,
        const void *T,
        REDAOrderedDataTypeCompareFunction userDataCompareFnc,
        const struct REDAManagedSkiplistProperty *property);


struct REDAManagedSkiplistIterator {
    struct REDASkiplist *_list;
    struct REDASkiplistNode *_node;
    void *userData;
};

extern REDADllExport
RTIBool REDAManagedSkiplistIterator_initialize(
        struct REDAManagedSkiplistIterator *iterator,
        struct REDAManagedSkiplist *managedList);

extern REDADllExport
RTIBool REDAManagedSkiplistIterator_next(
        struct REDAManagedSkiplistIterator *iterator);

extern REDADllExport
int REDAManagedSkiplistIterator_getElementCount(
        struct REDAManagedSkiplistIterator *iterator);


#ifdef __cplusplus
    } /* extern "C" */
#endif

#include "reda/reda_managedSkiplist_impl.h"

#endif /* reda_managedSkiplist_h */
