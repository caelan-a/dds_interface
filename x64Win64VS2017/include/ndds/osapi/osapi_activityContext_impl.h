/* (c) Copyright 2003-2021, Real-Time Innovations, Inc. All rights reserved. */
/*
 * @(#)osapi_activityContext_impl.h    generated by: makeheader    Fri Apr 23 00:09:51 2021
 *
 *		built from:	activityContext_impl.ifc
 */

#ifndef osapi_activityContext_impl_h
#define osapi_activityContext_impl_h


#ifdef __cplusplus
    extern "C" {
#endif



#define RTIOsapiActivityContextSupport_assertContextTss( \
        addContextTssToGlobalList) \
    RTIOsapiContextSupport_assertContextTss( \
            RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
            (addContextTssToGlobalList), \
            RTI_OSAPI_CONTEXT_STACK_SIZE_DEFAULT, \
            RTI_OSAPI_CONTEXT_STRING_SIZE_MAX)

#define RTIOsapiActivityContextSupport_assertContextTssWithParams( \
        addContextTssToGlobalList, \
        maxEntryCount) \
    RTIOsapiContextSupport_assertContextTss( \
            RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
            (addContextTssToGlobalList), \
            (maxEntryCount), \
            RTI_OSAPI_CONTEXT_STRING_SIZE_MAX)

#define RTIOsapiActivityContextScope_beginWithEntries(maxEntryCount) \
    RTIOsapiContextScope_begin() \
    RTI_UINT32 __entryIndex = 0; \
    const RTI_UINT32 __maxEntryCount = maxEntryCount; \
    struct RTIOsapiActivityContextStackEntry __entry[(maxEntryCount)]

#define RTIOsapiActivityContextScope_beginWithEntriesAndParams( \
        maxEntryCount, \
        maxParamsCount) \
    RTIOsapiActivityContextScope_beginWithEntries(maxEntryCount); \
    void *__paramsList[(maxParamsCount)]; \
    RTI_UINT32 __paramIndex = 0; \
    const RTI_UINT32 __maxParamCount = maxParamsCount

/*
 * Only in the PURIFY_TEST:
 * When overflow entering an entry or params into the context.
 * Log a fatal message and allocate 1B so it will be detected in the valgrind
 * plan using purify.
 */
#ifdef PURIFY_TEST
  #define RTIOsapiActivityContextScope_reportEnterOverflowFailure() \
    { \
        void *__detectEnterOverflowFailure = \
                RTIOsapiHeap_mallocWithoutHeapHeader(1); \
        /* In order to avoid warning: unused variable __detectEnterOverflowFailure */ \
        RTIOsapiUtility_unusedParameter(__detectEnterOverflowFailure); \
        RTILogMessage_print( \
                RTI_LOG_PRINT_FORMAT_MASK_ALL, \
                RTI_LOG_BIT_FATAL_ERROR, \
                MODULE_OSAPI, \
                &RTI_LOG_PRECONDITION_FAILURE_s, \
                "overflow entering entries or params"); \
    }
#else
  #define RTIOsapiActivityContextScope_reportEnterOverflowFailure() \
    ((void) 0);
#endif


#define RTIOsapiActivityContextScope_enterActivity(formatTemplate) \
    /* Check not overflow the array of entries */ \
    if (__entryIndex < __maxEntryCount) { \
        __entry[__entryIndex].format = (formatTemplate); \
        __entry[__entryIndex].kind = \
                RTI_OSAPI_ACTIVITY_CONTEXT_ENTRY_KIND_ACTIVITY; \
        RTIOsapiActivityContext_enter(&__entry[__entryIndex++]); \
    } else { \
        RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
    }

#define RTIOsapiActivityContextScope_enterActivityWithParams( \
        formatTemplate, \
        ...) \
    /* Check not overflow the array of entries */ \
    if (__entryIndex < __maxEntryCount) { \
        __entry[__entryIndex].params = &__paramsList[__paramIndex]; \
        if (RTIOsapiActivityContext_getParamList( \
                __paramsList, \
                &__paramIndex, \
                __maxParamCount, \
                (formatTemplate), \
                __VA_ARGS__)) { \
            __entry[__entryIndex].format = (formatTemplate); \
            __entry[__entryIndex].kind = \
                    RTI_OSAPI_ACTIVITY_CONTEXT_ENTRY_KIND_ACTIVITY_WITH_PARAMS; \
            RTIOsapiActivityContext_enter(&__entry[__entryIndex++]); \
        } else { \
            RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
        } \
    } else { \
        RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
    }

#define RTIOsapiActivityContextScope_enterResource( \
        formatTemplate, \
        resource) \
    /* Check not overflow the array of entries */ \
    if (__entryIndex < __maxEntryCount) { \
        __entry[__entryIndex].kind = RTI_OSAPI_ACTIVITY_CONTEXT_ENTRY_KIND_RESOURCE; \
        __entry[__entryIndex].format = (formatTemplate); \
        __entry[__entryIndex].params = (char *) (resource); \
        RTIOsapiActivityContext_enter(&__entry[__entryIndex++]); \
    } else { \
        RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
    }

#define RTIOsapiActivityContextScope_enterResourceWithParams( \
        formatTemplate, \
        ...) \
    /* Check not overflow the array of entries */ \
    if (__entryIndex < __maxEntryCount) { \
        __entry[__entryIndex].params = &__paramsList[__paramIndex]; \
        if (RTIOsapiActivityContext_getParamList( \
                __paramsList, \
                &__paramIndex, \
                __maxParamCount, \
                (formatTemplate), \
                __VA_ARGS__)) { \
            __entry[__entryIndex].kind = \
                    RTI_OSAPI_ACTIVITY_CONTEXT_ENTRY_KIND_RESOURCE_WITH_PARAMS; \
            __entry[__entryIndex].format = (formatTemplate); \
            RTIOsapiActivityContext_enter(&__entry[__entryIndex++]); \
        } else { \
            RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
        } \
    } else { \
        RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
    }

#define RTIOsapiActivityContextScope_enterResourceGuidWithParams( \
        formatTemplate, \
        ...) \
    /* Check not overflow the array of entries */ \
    if (__entryIndex < __maxEntryCount) { \
        __entry[__entryIndex].params = &__paramsList[__paramIndex]; \
        if (RTIOsapiActivityContext_getParamList( \
                __paramsList, \
                &__paramIndex, \
                __maxParamCount, \
                (formatTemplate), \
                __VA_ARGS__)) { \
            __entry[__entryIndex].kind = \
                    RTI_OSAPI_ACTIVITY_CONTEXT_ENTRY_KIND_RESOURCE_GUID_WITH_PARAMS; \
            __entry[__entryIndex].format = (formatTemplate); \
            RTIOsapiActivityContext_enter(&__entry[__entryIndex++]); \
        } else { \
            RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
        } \
    } else { \
        RTIOsapiActivityContextScope_reportEnterOverflowFailure(); \
    }

#define RTIOsapiActivityContextScope_leave() \
    if (__entryIndex > 0) { \
        RTIOsapiActivityContext_leave(); \
        __entryIndex--; \
    }

#define RTIOsapiActivityContextScope_end() \
    RTIOsapiActivityContext_leaveGroup(NULL, __entryIndex); \
    RTIOsapiContextScope_end()

#define RTIOsapiActivityContext_enter(entry) \
    RTIOsapiUtility_unusedReturnValue( \
            RTIOsapiContext_enter( \
                    RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
                    (entry)), \
            RTIBool)

#define RTIOsapiActivityContext_enterPair(__self, __entry1, __entry2) \
    RTIOsapiContext_enterPair( \
            (__self), \
            RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
            (__entry1), \
            (__entry2))

#define RTIOsapiActivityContext_enterGroup(groupSize, ...) \
    RTIOsapiUtility_unusedReturnValue( \
            RTIOsapiContext_enterGroup( \
                    RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
                    (groupSize), \
                    __VA_ARGS__), \
            RTIBool)

#define RTIOsapiActivityContext_leave() \
    RTIOsapiUtility_unusedReturnValue( \
            RTIOsapiContext_leave(RTI_OSAPI_ACTIVITY_CONTEXT_INDEX), \
            RTIBool)

#define RTIOsapiActivityContext_leaveGroup(__self, __groupSize) \
        RTIOsapiContext_leaveGroup( \
                (__self), \
                RTI_OSAPI_ACTIVITY_CONTEXT_INDEX, \
                (__groupSize))

#define RTIOsapiActivityContext_getDepth() \
    RTIOsapiContext_getDepth(RTI_OSAPI_ACTIVITY_CONTEXT_INDEX)

#define RTIOsapiActivityContextStackEntry_initialize(kind) \
    { \
        (kind), \
        0, \
        NULL, \
        NULL \
    }



#ifdef __cplusplus
    }	/* extern "C" */
#endif


#endif /* osapi_activityContext_impl_h */
